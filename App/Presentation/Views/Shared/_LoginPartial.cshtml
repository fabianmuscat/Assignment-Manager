@using System.Security.Claims
@using Domain.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Student> _signInManager
@inject UserManager<Student> _userManager

<ul class="navbar-nav">
    @if (_signInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="fw-bold nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, <span class="fw-bold">@(((ClaimsIdentity)User.Identity!).FindFirst("FullName")!.Value)</span>!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Redirect", "Assignments", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>